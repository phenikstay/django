#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–∞–º–ø–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./restore_fixtures.sh [–æ–ø—Ü–∏–∏]

show_help() {
    echo "üîÑ –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∏–∫—Å—Ç—É—Ä"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --full              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª–Ω—ã–π –¥–∞–º–ø (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  --clean             –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–∏—Å—Ç—ã–π –¥–∞–º–ø (–±–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü)"
    echo "  --apps              –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º"
    echo "  --catalog-only      –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–∞—Ç–∞–ª–æ–≥"
    echo "  --users-only        –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "  --delivery-only     –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏"
    echo "  --verify-delivery   –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ DeliverySettings"
    echo "  --help, -h          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                        # –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"
    echo "  $0 --clean               # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
    echo "  $0 --catalog-only        # –¢–æ–ª—å–∫–æ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤"
    echo "  $0 --delivery-only       # –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏"
    echo "  $0 --verify-delivery     # –ü—Ä–æ–≤–µ—Ä–∫–∞ DeliverySettings"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DeliverySettings
verify_delivery_settings() {
    echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è DeliverySettings..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π - –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–æ–º
    local count_output=$(python manage.py shell --verbosity=0 -c "from orders.models import DeliverySettings; print(DeliverySettings.objects.count())" 2>/dev/null)
    local count=$(echo "$count_output" | tail -n 1 | tr -d '[:space:]')
    
    if [ -z "$count" ] || [ "$count" = "error" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ DeliverySettings"
        return 1
    elif [ "$count" = "0" ]; then
        echo "‚ö†Ô∏è  DeliverySettings –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo "   –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
        python manage.py shell --verbosity=0 -c "from orders.models import DeliverySettings; ds = DeliverySettings.get_settings(); print(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å ID={ds.id}')" 2>/dev/null
    elif [ "$count" = "1" ]; then
        echo "‚úÖ DeliverySettings –≤ –ø–æ—Ä—è–¥–∫–µ (1 –∑–∞–ø–∏—Å—å)"
        python manage.py shell --verbosity=0 -c "from orders.models import DeliverySettings; ds = DeliverySettings.get_settings(); print(f'   ID: {ds.id}, Express: {ds.express_delivery_cost}, Regular: {ds.regular_delivery_cost}')" 2>/dev/null
    else
        echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $count –∑–∞–ø–∏—Å–µ–π DeliverySettings (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 1)"
        echo "   –≠—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç singleton constraint!"
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é
        echo "   –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
        python manage.py shell --verbosity=0 -c "
from orders.models import DeliverySettings
from django.db import transaction

with transaction.atomic():
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π
    extra_records = DeliverySettings.objects.exclude(pk=1)
    if extra_records.exists():
        count = extra_records.count()
        extra_records.delete()
        print(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} –ª–∏—à–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∑–∞–ø–∏—Å—å
    ds = DeliverySettings.get_settings()
    print(f'‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–ø–∏—Å—å ID={ds.id} –≤ –ø–æ—Ä—è–¥–∫–µ')
" 2>/dev/null
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
clear_database() {
    echo "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if [ -f "db.sqlite3" ]; then
        rm db.sqlite3
        echo "   ‚úÖ –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω–∞"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    echo "   üî® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    python manage.py migrate --verbosity=0
    echo "   ‚úÖ –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë–º DeliverySettings –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    echo "   üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DeliverySettings..."
    python manage.py shell --verbosity=0 -c "from orders.models import DeliverySettings; ds = DeliverySettings.get_settings(); print(f'   ‚úÖ DeliverySettings –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã (ID={ds.id})')" 2>/dev/null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –¥–∞–º–ø–∞
restore_full() {
    echo "üìä –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –¥–∞–º–ø–∞..."
    if [ ! -f "fixtures/full_database_dump.json" ]; then
        echo "‚ùå –§–∞–π–ª fixtures/full_database_dump.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    clear_database
    python manage.py loaddata fixtures/full_database_dump.json
    echo "‚úÖ –ü–æ–ª–Ω—ã–π –¥–∞–º–ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DeliverySettings –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    verify_delivery_settings
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–∏—Å—Ç–æ–≥–æ –¥–∞–º–ø–∞
restore_clean() {
    echo "üßπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–∏—Å—Ç–æ–≥–æ –¥–∞–º–ø–∞..."
    if [ ! -f "fixtures/clean_database_dump.json" ]; then
        echo "‚ùå –§–∞–π–ª fixtures/clean_database_dump.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    clear_database
    python manage.py loaddata fixtures/clean_database_dump.json
    echo "‚úÖ –ß–∏—Å—Ç—ã–π –¥–∞–º–ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DeliverySettings –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    verify_delivery_settings
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º
restore_apps() {
    echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º..."
    
    clear_database
    
    # –ü–æ—Ä—è–¥–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–∂–µ–Ω –∏–∑-–∑–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    local apps=("auth_dump" "users_dump" "catalog_dump" "orders_dump" "payments_dump" "basket_dump")
    local names=("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è" "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" "üõçÔ∏è  –ö–∞—Ç–∞–ª–æ–≥" "üìã –ó–∞–∫–∞–∑—ã" "üí≥ –ü–ª–∞—Ç–µ–∂–∏" "üõí –ö–æ—Ä–∑–∏–Ω–∞")
    
    for i in "${!apps[@]}"; do
        local app="${apps[$i]}"
        local name="${names[$i]}"
        local file="fixtures/${app}.json"
        
        if [ -f "$file" ]; then
            echo "   $name..."
            python manage.py loaddata "$file"
            echo "     ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ"
        else
            echo "     ‚ö†Ô∏è  –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
    done
    
    echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DeliverySettings –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    verify_delivery_settings
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –∫–∞—Ç–∞–ª–æ–≥–∞
restore_catalog_only() {
    echo "üõçÔ∏è  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫–∞—Ç–∞–ª–æ–≥–∞..."
    
    if [ ! -f "fixtures/catalog_dump.json" ]; then
        echo "‚ùå –§–∞–π–ª fixtures/catalog_dump.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    # –ù–µ –æ—á–∏—â–∞–µ–º –≤—Å—é –±–∞–∑—É, —Ç–æ–ª—å–∫–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥
    python manage.py loaddata fixtures/catalog_dump.json
    echo "‚úÖ –ö–∞—Ç–∞–ª–æ–≥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
restore_users_only() {
    echo "üë• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
    
    local files=("fixtures/auth_dump.json" "fixtures/users_dump.json")
    
    for file in "${files[@]}"; do
        if [ -f "$file" ]; then
            python manage.py loaddata "$file"
        else
            echo "‚ö†Ô∏è  –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
    done
    
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏
restore_delivery_only() {
    echo "‚öôÔ∏è  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏..."
    
    if [ -f "fixtures/delivery_settings_dump.json" ]; then
        echo "   –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –¥–∞–º–ø–∞..."
        python manage.py loaddata fixtures/delivery_settings_dump.json
    elif [ -f "fixtures/orders_dump.json" ]; then
        echo "   –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –¥–∞–º–ø–∞ –∑–∞–∫–∞–∑–æ–≤..."
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ —Å DeliverySettings
        python manage.py shell --verbosity=0 -c "
import json
with open('fixtures/orders_dump.json', 'r') as f:
    data = json.load(f)
delivery_data = [item for item in data if item['model'] == 'orders.deliverysettings']
if delivery_data:
    with open('/tmp/temp_delivery.json', 'w') as f:
        json.dump(delivery_data, f, indent=2)
    print('‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω')
else:
    print('‚ùå DeliverySettings –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ orders_dump.json')
" 2>/dev/null
        
        if [ -f "/tmp/temp_delivery.json" ]; then
            python manage.py loaddata /tmp/temp_delivery.json
            rm /tmp/temp_delivery.json
            echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏"
        fi
    else
        echo "‚ùå –§–∞–π–ª—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
        echo "   –°–æ–∑–¥–∞—ë–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
        python manage.py shell --verbosity=0 -c "from orders.models import DeliverySettings; ds = DeliverySettings.get_settings(); print(f'‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (ID={ds.id})')" 2>/dev/null
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    verify_delivery_settings
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
check_prerequisites() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if [[ "$VIRTUAL_ENV" == "" ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"
        echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: source .venv/bin/activate"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Django –ø—Ä–æ–µ–∫—Ç
    if ! python manage.py check > /dev/null 2>&1; then
        echo "‚ùå –û—à–∏–±–∫–∞: Django –ø—Ä–æ–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é fixtures (–∫—Ä–æ–º–µ verify-delivery)
    if [ "$1" != "--verify-delivery" ] && [ ! -d "fixtures" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è fixtures –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        echo "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –¥–∞–º–ø—ã —Å –ø–æ–º–æ—â—å—é ./create_fixtures.sh"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π..."
    if ! python manage.py showmigrations orders | grep -q "\[X\].*0001_initial"; then
        echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –ù–∞—á–∞–ª—å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è orders –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!"
        echo "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: python manage.py migrate"
        read -p "   –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
show_stats() {
    echo ""
    echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
    echo "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
    echo "‚îÇ –ú–æ–¥–µ–ª—å                               ‚îÇ –ó–∞–ø–∏—Å–µ–π  ‚îÇ"
    echo "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§"
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local models=("auth.User:–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" "catalog.Product:–¢–æ–≤–∞—Ä—ã" "catalog.Category:–ö–∞—Ç–µ–≥–æ—Ä–∏–∏" "orders.Order:–ó–∞–∫–∞–∑—ã" "payments.Payment:–ü–ª–∞—Ç–µ–∂–∏" "orders.DeliverySettings:–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏")
    local names=("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏                         " "–¢–æ–≤–∞—Ä—ã                               " "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏                            " "–ó–∞–∫–∞–∑—ã                               " "–ü–ª–∞—Ç–µ–∂–∏                              " "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏                  ")
    
    for i in "${!models[@]}"; do
        local model="${models[$i]%%:*}"
        local name="${names[$i]}"
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–æ–º
        local count_output=$(python manage.py shell --verbosity=0 -c "from django.apps import apps; print(apps.get_model('${model}').objects.count())" 2>/dev/null)
        local count=$(echo "$count_output" | tail -n 1 | tr -d '[:space:]')
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 0
        if ! [[ "$count" =~ ^[0-9]+$ ]]; then
            count="0"
        fi
        printf "‚îÇ %s ‚îÇ %8s ‚îÇ\n" "${name:0:36}" "$count"
    done
    
    echo "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò"
    echo ""
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ DeliverySettings
    verify_delivery_settings
    
    echo ""
    echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∏–∫—Å—Ç—É—Ä..."
    echo ""
    
    check_prerequisites "$1"
    
    case "$1" in
        --help|-h)
            show_help
            exit 0
            ;;
        --verify-delivery)
            verify_delivery_settings
            exit 0
            ;;
        --clean)
            restore_clean
            ;;
        --apps)
            restore_apps
            ;;
        --catalog-only)
            restore_catalog_only
            ;;
        --users-only)
            restore_users_only
            ;;
        --delivery-only)
            restore_delivery_only
            ;;
        --full|"")
            restore_full
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π
    case "$1" in
        --catalog-only|--users-only|--delivery-only|--verify-delivery)
            echo "‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            ;;
        *)
            show_stats
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@" 