# Generated by Django 5.2 on 2025-06-07 21:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def create_default_delivery_settings(apps, schema_editor):
    """
    Создаем запись настроек доставки по умолчанию с ID=1
    """
    DeliverySettings = apps.get_model('orders', 'DeliverySettings')
    
    # Создаем единственную запись с ID=1
    if not DeliverySettings.objects.filter(pk=1).exists():
        DeliverySettings.objects.create(
            pk=1,
            express_delivery_cost=500.00,
            free_delivery_threshold=2000.00,
            regular_delivery_cost=200.00,
        )


def reverse_create_default_delivery_settings(apps, schema_editor):
    """
    Обратная миграция - удаляем созданную запись
    """
    DeliverySettings = apps.get_model('orders', 'DeliverySettings')
    DeliverySettings.objects.filter(pk=1).delete()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalog", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DeliverySettings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "express_delivery_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=500.0,
                        max_digits=10,
                        verbose_name="Стоимость экспресс-доставки",
                    ),
                ),
                (
                    "free_delivery_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=2000.0,
                        max_digits=10,
                        verbose_name="Сумма для бесплатной доставки",
                    ),
                ),
                (
                    "regular_delivery_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=200.0,
                        max_digits=10,
                        verbose_name="Стоимость обычной доставки",
                    ),
                ),
            ],
            options={
                "verbose_name": "Настройки доставки",
                "verbose_name_plural": "Настройки доставки",
                "default_permissions": ("change",),
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fullName", models.CharField(max_length=255, verbose_name="ФИО")),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("phone", models.CharField(max_length=20, verbose_name="Телефон")),
                (
                    "createdAt",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "deliveryType",
                    models.CharField(
                        choices=[
                            ("ordinary", "Обычная доставка"),
                            ("express", "Экспресс-доставка"),
                        ],
                        default="ordinary",
                        max_length=10,
                        verbose_name="Тип доставки",
                    ),
                ),
                (
                    "paymentType",
                    models.CharField(
                        choices=[
                            ("online", "Онлайн картой"),
                            ("someone", "Онлайн со случайного чужого счёта"),
                        ],
                        default="online",
                        max_length=10,
                        verbose_name="Тип платежа",
                    ),
                ),
                (
                    "totalCost",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Общая стоимость"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает обработки"),
                            ("processing", "Обрабатывается"),
                            ("accepted", "Принят"),
                            ("completed", "Выполнен"),
                            ("canceled", "Отменён"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                ("city", models.CharField(max_length=255, verbose_name="Город")),
                ("address", models.CharField(max_length=255, verbose_name="Адрес")),
                (
                    "comment",
                    models.TextField(blank=True, verbose_name="Комментарий к заказу"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена"
                    ),
                ),
                (
                    "count",
                    models.PositiveIntegerField(default=1, verbose_name="Количество"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="orders.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар в заказе",
                "verbose_name_plural": "Товары в заказе",
            },
        ),
        # Добавляем constraint для singleton behavior DeliverySettings
        migrations.AddConstraint(
            model_name="deliverysettings",
            constraint=models.CheckConstraint(
                condition=models.Q(("id", 1)),
                name="delivery_settings_singleton",
                violation_error_message="Настройки доставки должны иметь id=1 (singleton pattern)",
            ),
        ),
        # Создаем запись DeliverySettings по умолчанию
        migrations.RunPython(
            create_default_delivery_settings,
            reverse_create_default_delivery_settings
        ),
    ]
